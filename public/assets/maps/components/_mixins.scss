// Mixins
// Border
// border-radius
// Gradients
@mixin content-gradient($derection, $color-1, $color-2) {
    background-image: linear-gradient($derection, $color-1, $color-2);
    background-repeat: repeat-x;
}

@mixin content-gradient-rev() {
    background-image: linear-gradient(to right, $theme-lighter, $theme-color);
    background-repeat: repeat-x;
}

@mixin content-gradient-trp() {
    background-image: linear-gradient(to right, rgba(92, 129, 250, .7), rgba(57, 168, 254, .7));
    background-repeat: repeat-x;
}

// gradient
@mixin linear-gradient($start-color, $end-color, $position: top, $perStart: 0%, $perEnd: 100%) {
    /* IE10 */
    filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0, start-colorstr=#{$start-color}, end-colorstr=#{$end-color});
    /* IE9 */
    ms-filter: "progid:DXImageTransform.Microsoft.gradient (GradientType=0, start-colorstr=#{$start-color}, end-colorstr=#{$end-color})";
    /* IE8 */
    background: linear-gradient( $position, $start-color $perStart, $end-color $perEnd);
    /* W3C */
}

@mixin background-clip($value) {
    -webkit-background-clip: $value;
}

// $dir = Direction of gradient
// $from = Starting color
// $to = Ending color
// $width = Border width/thickness
@mixin border-gradient($dir, $from, $to, $width) {
    border-left: $width solid $from;
    border-right: $width solid $to;
    background-image: -webkit-linear-gradient($dir, $from, $to), -webkit-linear-gradient($dir, $from, $to);
    background-size: 100% $width;
    background-position: 0 100%, 0 0;
    background-repeat: no-repeat;
    background-clip: border-box;
}

@mixin text-gradient($dir, $from, $to) {
    background: linear-gradient($dir, $from, $to);
    -webkit-background-clip: text;
    color: transparent;
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
    @if $inset {
        box-shadow: inset $top $left $blur $color;
    }
    @else {
        box-shadow: $top $left $blur $color;
    }
}

// Flexbox
@mixin display-flex() {
    display: flex;
}

// alias display-flex()
@mixin flexbox() {
    @include display-flex();
}

@mixin inline-flex() {
    display: inline-flex;
}

// alias inline-flex()
@mixin inline-flexbox() {
    @include inline-flex();
}

@mixin flex-inline($value) {
    -webkit-inline-flex: $value;
    /* Chrome 21.0+ */
    -moz-inline-flex: $value;
    -ms-inline-flex: $value;
    inline-flex: $value;
    /* Firefox 20+, Opera 12.5 */
}

@mixin flex($value: 1) {
    flex: $value;
    /* New, Spec - Firefox, Chrome, Opera */
}

@mixin flex-direction($value: row) {
    @if $value==row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
    }
    @else if $value==column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
    }
    @else if $value==column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
    }
    @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
    }
    -webkit-flex-direction: $value;
    /* Chrome 21.0+, But Safari & Android & iOS Not supported. */
    -moz-flex-direction: $value;
    -ms-flex-direction: $value;
    flex-direction: $value;
    /* Firefox 28+, IE11, Opera 12.10 */
}

@mixin flex-basis($value: auto) {
    -webkit-flex-basis: $value;
    /* Chrome 21.0+, But Safari & Android & iOS Not supported. */
    -ms-flex-preferred-size: $value;
    -moz-flex-basis: $value;
    flex-basis: $value;
    /* Firefox 22+, IE11, Opera 12.10 */
}

@mixin flex-flow($values: (row nowrap)) {
    -webkit-flex-flow: $values;
    /* Chrome 21.0+, But Safari & Android & iOS Not supported. */
    -moz-flex-flow: $values;
    -ms-flex-flow: $values;
    flex-flow: $values;
    /* Firefox 28+, IE11, Opera 12.10 */
}

@mixin flex-grow($value: 0) {
    -webkit-box-flex: $value;
    -webkit-flex-grow: $value;
    /* Chrome 21.0+, But Safari & Android & iOS Not supported. */
    -ms-flex-positive: $value;
    -moz-flex-grow: $value;
    flex-grow: $value;
    /* Firefox 20+, Opera 12.10, IE Not supported. */
}

@mixin flex-shrink($value) {
    -webkit-flex-shrink: $value;
    /* Chrome 21.0+, But Safari & Android & iOS Not supported. */
    -moz-flex-shrink: $value;
    flex-shrink: $value;
    /* Firefox 20+, Opera 12.10, IE Not supported. */
}

@mixin flex-wrap($value: nowrap) {
    flex-wrap: $value;
    /* Firefox 28+, IE11, Opera 12.10 */
}

@mixin order($value: 1) {
    -ms-flex-order: $value;
    /* IE 10.0 */
    -moz-order: $value;
    order: $value;
    /* Firefox 20+, Opera 12.10 */
}

// alias order()
@mixin flex-order($args...) {
    @include order($args...);
}

// flow
@mixin flow-into($value) {
    -webkit-flow-into: $value;
    /* Safari 7.1+, iOS Safari 7.1+ */
    -moz-flow-into: $value;
    -ms-flow-into: $value;
    /* IE10+ */
    flow-into: $value;
    /* None yet */
}

@mixin flow-from($value) {
    -webkit-flow-from: $value;
    /* Safari 7.1+, iOS Safari 7.1+ */
    -moz-flow-from: $value;
    -ms-flow-from: $value;
    /* IE10+ */
    flow-from: $value;
    /* None yet */
}

// Flex align
// Values: flex-start | flex-end | center | space-between | space-around | stretch
@mixin align-content($value: stretch) {
    -webkit-align-content: $value;
    /* Chrome 21.0+, Safari Not supported. */
    -moz-align-content: $value;
    @if $value==flex-start {
        -ms-flex-line-pack: start;
    }
    @else if $value==flex-end {
        -ms-flex-line-pack: end;
    }
    @else {
        -ms-flex-line-pack: $value;
    }
    align-content: $value;
    /* Firefox 28+, Opera 12.10, IE Not supported. */
}

@mixin align-items($value: stretch) {
    @if $value==flex-start {
        -webkit-box-align: start;
        -ms-flex-align: start;
    }
    @else if $value==flex-end {
        -webkit-box-align: end;
        -ms-flex-align: end;
    }
    @else {
        -webkit-box-align: $value;
        -ms-flex-align: $value;
    }
    align-items: $value;
    /* Firefox 20.0+, IE11+, Opera 12.10 */
}

// Values: auto | flex-start | flex-end | center | baseline | stretch
@mixin align-self($value: auto) {
    align-self: $value;
    /* Firefox 28+, Opera 12.10, IE Not supported. */
}

@mixin justify-content($value: flex-start) {
    @if $value==flex-start {
        -webkit-box-pack: start;
        -ms-flex-pack: start;
    }
    @else if $value==flex-end {
        -webkit-box-pack: end;
        -ms-flex-pack: end;
    }
    @else if $value==space-around {
        -ms-flex-pack: distribute;
    }
    @else if $value==space-between {
        -webkit-box-pack: justify;
        -ms-flex-pack: justify;
    }
    @else {
        -webkit-box-pack: $value;
        -ms-flex-pack: $value;
    }
    justify-content: $value;
    /* Firefox 20+, Opera 12.10, IE Not supported. */
}

// alias justify-content
@mixin flex-justify($args...) {
    @include justify-content($args...);
}

@keyframes fadeInRight{
    0% {
        display: none;
        opacity: 0;
        transform: translate(100px);
    }
    100% {
        display: block;
        opacity: 1;
        transform: translate(0);
    }
}